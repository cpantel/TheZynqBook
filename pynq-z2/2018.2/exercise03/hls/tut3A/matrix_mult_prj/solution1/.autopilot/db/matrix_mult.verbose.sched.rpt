

================================================================
== Vivado HLS Report for 'matrix_mult'
================================================================
* Date:           Wed Dec 25 17:03:36 2019

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        matrix_mult_prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   5.00|     3.492|        0.62|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  686|  686|  686|  686|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------+-----+-----+----------+-----------+-----------+------+----------+
        |              |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name  | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Row         |  685|  685|       137|          -|          -|     5|    no    |
        | + Col        |  135|  135|        27|          -|          -|     5|    no    |
        |  ++ Product  |   25|   25|         5|          -|          -|     5|    no    |
        +--------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond2)
3 --> 
	4  / (!exitcond1)
	2  / (exitcond1)
4 --> 
	5  / (!exitcond)
	3  / (exitcond)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	4  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([25 x i8]* %a) nounwind, !map !7"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([25 x i8]* %b) nounwind, !map !13"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([25 x i16]* %prod) nounwind, !map !17"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([12 x i8]* @matrix_mult_str) nounwind"   --->   Operation 12 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (1.76ns)   --->   "br label %1" [matrix_mult.cpp:10]   --->   Operation 13 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.78>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%i = phi i3 [ 0, %0 ], [ %i_1, %8 ]"   --->   Operation 14 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (1.13ns)   --->   "%exitcond2 = icmp eq i3 %i, -3" [matrix_mult.cpp:10]   --->   Operation 15 'icmp' 'exitcond2' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5) nounwind"   --->   Operation 16 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (1.65ns)   --->   "%i_1 = add i3 %i, 1" [matrix_mult.cpp:10]   --->   Operation 17 'add' 'i_1' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "br i1 %exitcond2, label %9, label %2" [matrix_mult.cpp:10]   --->   Operation 18 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str) nounwind" [matrix_mult.cpp:10]   --->   Operation 19 'specloopname' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str) nounwind" [matrix_mult.cpp:10]   --->   Operation 20 'specregionbegin' 'tmp_1' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%tmp_cast = zext i3 %i to i6" [matrix_mult.cpp:10]   --->   Operation 21 'zext' 'tmp_cast' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%tmp_9 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %i, i2 0)" [matrix_mult.cpp:10]   --->   Operation 22 'bitconcatenate' 'tmp_9' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%p_shl_cast = zext i5 %tmp_9 to i6" [matrix_mult.cpp:16]   --->   Operation 23 'zext' 'p_shl_cast' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (1.78ns)   --->   "%tmp_s = add i6 %tmp_cast, %p_shl_cast" [matrix_mult.cpp:16]   --->   Operation 24 'add' 'tmp_s' <Predicate = (!exitcond2)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (1.76ns)   --->   "br label %3" [matrix_mult.cpp:12]   --->   Operation 25 'br' <Predicate = (!exitcond2)> <Delay = 1.76>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "ret void" [matrix_mult.cpp:21]   --->   Operation 26 'ret' <Predicate = (exitcond2)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.82>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%j = phi i3 [ 0, %2 ], [ %j_1, %7 ]"   --->   Operation 27 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (1.13ns)   --->   "%exitcond1 = icmp eq i3 %j, -3" [matrix_mult.cpp:12]   --->   Operation 28 'icmp' 'exitcond1' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5) nounwind"   --->   Operation 29 'speclooptripcount' 'empty_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (1.65ns)   --->   "%j_1 = add i3 %j, 1" [matrix_mult.cpp:12]   --->   Operation 30 'add' 'j_1' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "br i1 %exitcond1, label %8, label %4" [matrix_mult.cpp:12]   --->   Operation 31 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str1) nounwind" [matrix_mult.cpp:12]   --->   Operation 32 'specloopname' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str1) nounwind" [matrix_mult.cpp:12]   --->   Operation 33 'specregionbegin' 'tmp_3' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_2_cast = zext i3 %j to i6" [matrix_mult.cpp:13]   --->   Operation 34 'zext' 'tmp_2_cast' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (1.82ns)   --->   "%tmp_2 = add i6 %tmp_s, %tmp_2_cast" [matrix_mult.cpp:13]   --->   Operation 35 'add' 'tmp_2' <Predicate = (!exitcond1)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%tmp_11_cast = zext i6 %tmp_2 to i64" [matrix_mult.cpp:13]   --->   Operation 36 'zext' 'tmp_11_cast' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%prod_addr = getelementptr [25 x i16]* %prod, i64 0, i64 %tmp_11_cast" [matrix_mult.cpp:13]   --->   Operation 37 'getelementptr' 'prod_addr' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (1.76ns)   --->   "br label %5" [matrix_mult.cpp:15]   --->   Operation 38 'br' <Predicate = (!exitcond1)> <Delay = 1.76>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str, i32 %tmp_1) nounwind" [matrix_mult.cpp:19]   --->   Operation 39 'specregionend' 'empty_5' <Predicate = (exitcond1)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "br label %1" [matrix_mult.cpp:10]   --->   Operation 40 'br' <Predicate = (exitcond1)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 3.49>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "%prod_load = phi i16 [ 0, %4 ], [ %tmp_8, %6 ]" [matrix_mult.cpp:16]   --->   Operation 41 'phi' 'prod_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%k = phi i3 [ 0, %4 ], [ %k_1, %6 ]"   --->   Operation 42 'phi' 'k' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (2.32ns)   --->   "store i16 %prod_load, i16* %prod_addr, align 2" [matrix_mult.cpp:16]   --->   Operation 43 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 25> <RAM>
ST_4 : Operation 44 [1/1] (1.13ns)   --->   "%exitcond = icmp eq i3 %k, -3" [matrix_mult.cpp:15]   --->   Operation 44 'icmp' 'exitcond' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5) nounwind"   --->   Operation 45 'speclooptripcount' 'empty_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (1.65ns)   --->   "%k_1 = add i3 %k, 1" [matrix_mult.cpp:15]   --->   Operation 46 'add' 'k_1' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %7, label %6" [matrix_mult.cpp:15]   --->   Operation 47 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_4_cast = zext i3 %k to i6" [matrix_mult.cpp:16]   --->   Operation 48 'zext' 'tmp_4_cast' <Predicate = (!exitcond)> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (1.82ns)   --->   "%tmp_4 = add i6 %tmp_s, %tmp_4_cast" [matrix_mult.cpp:16]   --->   Operation 49 'add' 'tmp_4' <Predicate = (!exitcond)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_10 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %k, i2 0)" [matrix_mult.cpp:15]   --->   Operation 50 'bitconcatenate' 'tmp_10' <Predicate = (!exitcond)> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%p_shl1_cast = zext i5 %tmp_10 to i6" [matrix_mult.cpp:16]   --->   Operation 51 'zext' 'p_shl1_cast' <Predicate = (!exitcond)> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp_11 = add i6 %tmp_4_cast, %p_shl1_cast" [matrix_mult.cpp:16]   --->   Operation 52 'add' 'tmp_11' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.74> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 53 [1/1] (3.49ns) (root node of TernaryAdder)   --->   "%tmp_12 = add i6 %tmp_11, %tmp_2_cast" [matrix_mult.cpp:16]   --->   Operation 53 'add' 'tmp_12' <Predicate = (!exitcond)> <Delay = 3.49> <Core = "TAddSub">   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.74> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str1, i32 %tmp_3) nounwind" [matrix_mult.cpp:18]   --->   Operation 54 'specregionend' 'empty_4' <Predicate = (exitcond)> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "br label %3" [matrix_mult.cpp:12]   --->   Operation 55 'br' <Predicate = (exitcond)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 2.32>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%tmp_12_cast = zext i6 %tmp_4 to i64" [matrix_mult.cpp:16]   --->   Operation 56 'zext' 'tmp_12_cast' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "%a_addr = getelementptr [25 x i8]* %a, i64 0, i64 %tmp_12_cast" [matrix_mult.cpp:16]   --->   Operation 57 'getelementptr' 'a_addr' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_15_cast = zext i6 %tmp_12 to i64" [matrix_mult.cpp:16]   --->   Operation 58 'zext' 'tmp_15_cast' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "%b_addr = getelementptr [25 x i8]* %b, i64 0, i64 %tmp_15_cast" [matrix_mult.cpp:16]   --->   Operation 59 'getelementptr' 'b_addr' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 60 [2/2] (2.32ns)   --->   "%a_load = load i8* %a_addr, align 1" [matrix_mult.cpp:16]   --->   Operation 60 'load' 'a_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 25> <RAM>
ST_5 : Operation 61 [2/2] (2.32ns)   --->   "%b_load = load i8* %b_addr, align 1" [matrix_mult.cpp:16]   --->   Operation 61 'load' 'b_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 25> <RAM>

State 6 <SV = 5> <Delay = 3.37>
ST_6 : Operation 62 [1/2] (2.32ns)   --->   "%a_load = load i8* %a_addr, align 1" [matrix_mult.cpp:16]   --->   Operation 62 'load' 'a_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 25> <RAM>
ST_6 : Operation 63 [1/1] (0.00ns)   --->   "%tmp_5 = sext i8 %a_load to i16" [matrix_mult.cpp:16]   --->   Operation 63 'sext' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 64 [1/2] (2.32ns)   --->   "%b_load = load i8* %b_addr, align 1" [matrix_mult.cpp:16]   --->   Operation 64 'load' 'b_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 25> <RAM>
ST_6 : Operation 65 [1/1] (0.00ns)   --->   "%tmp_6 = sext i8 %b_load to i16" [matrix_mult.cpp:16]   --->   Operation 65 'sext' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 66 [3/3] (1.05ns)   --->   "%tmp_7 = mul i16 %tmp_6, %tmp_5" [matrix_mult.cpp:16]   --->   Operation 66 'mul' 'tmp_7' <Predicate = true> <Delay = 1.05> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.88> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 7 <SV = 6> <Delay = 1.05>
ST_7 : Operation 67 [2/3] (1.05ns)   --->   "%tmp_7 = mul i16 %tmp_6, %tmp_5" [matrix_mult.cpp:16]   --->   Operation 67 'mul' 'tmp_7' <Predicate = true> <Delay = 1.05> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.88> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 8 <SV = 7> <Delay = 3.02>
ST_8 : Operation 68 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @p_str2) nounwind" [matrix_mult.cpp:15]   --->   Operation 68 'specloopname' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 69 [1/3] (0.00ns)   --->   "%tmp_7 = mul i16 %tmp_6, %tmp_5" [matrix_mult.cpp:16]   --->   Operation 69 'mul' 'tmp_7' <Predicate = true> <Delay = 0.00> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.88> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 70 [1/1] (3.02ns)   --->   "%tmp_8 = add i16 %tmp_7, %prod_load" [matrix_mult.cpp:16]   --->   Operation 70 'add' 'tmp_8' <Predicate = true> <Delay = 3.02> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.88> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 71 [1/1] (0.00ns)   --->   "br label %5" [matrix_mult.cpp:15]   --->   Operation 71 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 0.625ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', matrix_mult.cpp:10) [10]  (1.77 ns)

 <State 2>: 1.78ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', matrix_mult.cpp:10) [10]  (0 ns)
	'add' operation ('tmp_s', matrix_mult.cpp:16) [21]  (1.78 ns)

 <State 3>: 1.83ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', matrix_mult.cpp:12) [24]  (0 ns)
	'add' operation ('tmp_2', matrix_mult.cpp:13) [33]  (1.83 ns)

 <State 4>: 3.49ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', matrix_mult.cpp:15) [39]  (0 ns)
	'add' operation ('tmp_11', matrix_mult.cpp:16) [53]  (0 ns)
	'add' operation ('tmp_12', matrix_mult.cpp:16) [54]  (3.49 ns)

 <State 5>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('a_addr', matrix_mult.cpp:16) [50]  (0 ns)
	'load' operation ('a_load', matrix_mult.cpp:16) on array 'a' [57]  (2.32 ns)

 <State 6>: 3.37ns
The critical path consists of the following:
	'load' operation ('a_load', matrix_mult.cpp:16) on array 'a' [57]  (2.32 ns)
	'mul' operation ('tmp_7', matrix_mult.cpp:16) [61]  (1.05 ns)

 <State 7>: 1.05ns
The critical path consists of the following:
	'mul' operation ('tmp_7', matrix_mult.cpp:16) [61]  (1.05 ns)

 <State 8>: 3.02ns
The critical path consists of the following:
	'mul' operation ('tmp_7', matrix_mult.cpp:16) [61]  (0 ns)
	'add' operation ('tmp_8', matrix_mult.cpp:16) [62]  (3.02 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
