// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _matrix_mult_HH_
#define _matrix_mult_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "matrix_mult_mac_mbkb.h"

namespace ap_rtl {

struct matrix_mult : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > a_address0;
    sc_out< sc_logic > a_ce0;
    sc_in< sc_lv<8> > a_q0;
    sc_out< sc_lv<5> > b_address0;
    sc_out< sc_logic > b_ce0;
    sc_in< sc_lv<8> > b_q0;
    sc_out< sc_lv<5> > prod_address0;
    sc_out< sc_logic > prod_ce0;
    sc_out< sc_logic > prod_we0;
    sc_out< sc_lv<16> > prod_d0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    matrix_mult(sc_module_name name);
    SC_HAS_PROCESS(matrix_mult);

    ~matrix_mult();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    matrix_mult_mac_mbkb<1,3,8,8,16,16>* matrix_mult_mac_mbkb_U1;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > i_1_fu_132_p2;
    sc_signal< sc_lv<3> > i_1_reg_257;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<6> > tmp_s_fu_154_p2;
    sc_signal< sc_lv<6> > tmp_s_reg_262;
    sc_signal< sc_lv<1> > exitcond2_fu_126_p2;
    sc_signal< sc_lv<3> > j_1_fu_166_p2;
    sc_signal< sc_lv<3> > j_1_reg_271;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<6> > tmp_2_cast_fu_172_p1;
    sc_signal< sc_lv<6> > tmp_2_cast_reg_276;
    sc_signal< sc_lv<1> > exitcond1_fu_160_p2;
    sc_signal< sc_lv<5> > prod_addr_reg_281;
    sc_signal< sc_lv<3> > k_1_fu_192_p2;
    sc_signal< sc_lv<3> > k_1_reg_289;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<6> > tmp_4_fu_202_p2;
    sc_signal< sc_lv<6> > tmp_4_reg_294;
    sc_signal< sc_lv<1> > exitcond_fu_186_p2;
    sc_signal< sc_lv<6> > tmp_12_fu_225_p2;
    sc_signal< sc_lv<6> > tmp_12_reg_299;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<16> > grp_fu_246_p3;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<3> > i_reg_80;
    sc_signal< sc_lv<3> > j_reg_91;
    sc_signal< sc_lv<16> > prod_load_reg_102;
    sc_signal< sc_lv<3> > k_reg_115;
    sc_signal< sc_lv<64> > tmp_11_cast_fu_181_p1;
    sc_signal< sc_lv<64> > tmp_12_cast_fu_230_p1;
    sc_signal< sc_lv<64> > tmp_15_cast_fu_234_p1;
    sc_signal< sc_lv<5> > tmp_9_fu_142_p3;
    sc_signal< sc_lv<6> > tmp_cast_fu_138_p1;
    sc_signal< sc_lv<6> > p_shl_cast_fu_150_p1;
    sc_signal< sc_lv<6> > tmp_2_fu_176_p2;
    sc_signal< sc_lv<6> > tmp_4_cast_fu_198_p1;
    sc_signal< sc_lv<5> > tmp_10_fu_207_p3;
    sc_signal< sc_lv<6> > p_shl1_cast_fu_215_p1;
    sc_signal< sc_lv<6> > tmp_11_fu_219_p2;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_a_address0();
    void thread_a_ce0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_b_address0();
    void thread_b_ce0();
    void thread_exitcond1_fu_160_p2();
    void thread_exitcond2_fu_126_p2();
    void thread_exitcond_fu_186_p2();
    void thread_i_1_fu_132_p2();
    void thread_j_1_fu_166_p2();
    void thread_k_1_fu_192_p2();
    void thread_p_shl1_cast_fu_215_p1();
    void thread_p_shl_cast_fu_150_p1();
    void thread_prod_address0();
    void thread_prod_ce0();
    void thread_prod_d0();
    void thread_prod_we0();
    void thread_tmp_10_fu_207_p3();
    void thread_tmp_11_cast_fu_181_p1();
    void thread_tmp_11_fu_219_p2();
    void thread_tmp_12_cast_fu_230_p1();
    void thread_tmp_12_fu_225_p2();
    void thread_tmp_15_cast_fu_234_p1();
    void thread_tmp_2_cast_fu_172_p1();
    void thread_tmp_2_fu_176_p2();
    void thread_tmp_4_cast_fu_198_p1();
    void thread_tmp_4_fu_202_p2();
    void thread_tmp_9_fu_142_p3();
    void thread_tmp_cast_fu_138_p1();
    void thread_tmp_s_fu_154_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
